# This is the main configuration file for the application.
# ~~~~~
include "slick.conf"
# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret="i1hqCqyZ_6kVA:l/IPqasc;`]F2doo5BbTIYd?vZJ[CJ@d<2YtFatocNv`H:ATyZ"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
#comment to trigger git hook
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR
# Logger used by the framework:
logger.play=INFO
# Logger provided to your application:
logger.application=INFO
google.oauth.clientId="274245345539-nbt1r74j0g644tkbho2a59bog9ifp71u.apps.googleusercontent.com"
google.oauth.clientId=${?GOOGLE_OAUTH_CLIENT_ID}
google.oauth.clientSecret="zCmwVihaV17c7uS5u7LLEd9S"
google.oauth.clientSecret=${?GOOGLE_OAUTH_CLIENT_SECRET}
google.api.browserKey=AIzaSyCniQyg5-fXNf0JaVhYwh-a7kEfkPfbU6o
google.api.serverKey=AIzaSyCniQyg5-fXNf0JaVhYwh-a7kEfkPfbU6o
google.api.browserKey=${?GOOGLE_API_BROWSER_KEY}
google.api.serverKey=${?GOOGLE_API_SERVER_KEY}
google.api.key=${?GOOGLE_API_KEY}

# Cloudinary
image.folder="/var/tmp/public-bubble/"

# Evolutions
play.evolutions.autoApply=true

play.http.parser.maxDiskBuffer=100MB

parsers.anyContent.maxLength=100MB